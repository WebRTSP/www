/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("WebRTSP", [], factory);
	else if(typeof exports === 'object')
		exports["WebRTSP"] = factory();
	else
		root["WebRTSP"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./WebRTSP/ParseBuffer.mjs":
/*!*********************************!*\
  !*** ./WebRTSP/ParseBuffer.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ParseBuffer)\n/* harmony export */ });\nclass ParseBuffer\n{\n    constructor(buffer) {\n        this.buffer = buffer;\n        this._pos = 0;\n    }\n\n    get eos() {\n        return this.pos >= this.length;\n    }\n    get pos() {\n        return this._pos;\n    }\n    get length() {\n        return this.buffer.length;\n    }\n    get tailLength() {\n        return this.buffer.length - this.pos;\n    }\n    get currentChar() {\n        return this.charAt(this.pos);\n    }\n    get currentCharCode() {\n        return this.charCodeAt(this.pos);\n    }\n    get tail() {\n        return this.buffer.substring(this.pos, this.pos + this.tailLength);\n    }\n\n    clone() {\n        let clone = new ParseBuffer(this.buffer);\n        clone._pos = this.pos;\n\n        return clone;\n    }\n    assign(parseBuffer) {\n        this.buffer = parseBuffer.buffer;\n        this._pos = parseBuffer.pos;\n    }\n\n    advance(count) {\n        if(count === undefined)\n            ++this._pos\n        else\n            this._pos += count;\n    }\n    charAt(index) {\n        return this.buffer.charAt(index);\n    }\n    charCodeAt(index) {\n        return this.buffer.charCodeAt(index);\n    }\n    startsWith(searchString) {\n        return this.buffer.startsWith(searchString, this.pos);\n    }\n    substringFrom(beginPos) {\n        return this.buffer.substring(beginPos, this.pos);\n    }\n    substring(beginPos, endPos) {\n        return this.buffer.substring(beginPos, endPos);\n    }\n}\n\n\n//# sourceURL=webpack://WebRTSP/./WebRTSP/ParseBuffer.mjs?");

/***/ }),

/***/ "./WebRTSP/RtspMethod.mjs":
/*!********************************!*\
  !*** ./WebRTSP/RtspMethod.mjs ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DESCRIBE\": () => (/* binding */ DESCRIBE),\n/* harmony export */   \"LIST\": () => (/* binding */ LIST),\n/* harmony export */   \"Name\": () => (/* binding */ Name),\n/* harmony export */   \"OPTIONS\": () => (/* binding */ OPTIONS),\n/* harmony export */   \"PLAY\": () => (/* binding */ PLAY),\n/* harmony export */   \"Parse\": () => (/* binding */ Parse),\n/* harmony export */   \"RECORD\": () => (/* binding */ RECORD),\n/* harmony export */   \"SETUP\": () => (/* binding */ SETUP),\n/* harmony export */   \"TEARDOWN\": () => (/* binding */ TEARDOWN)\n/* harmony export */ });\nconst OPTIONS = 1;\nconst LIST = 2;\nconst DESCRIBE = 3;\nconst SETUP = 4;\nconst PLAY = 5;\nconst RECORD = 6;\nconst TEARDOWN = 7;\n// export const GET_PARAMETER = 8;\n// export const SET_PARAMETER = 9;\n\nconst names =\n{\n    OPTIONS,\n    LIST,\n    DESCRIBE,\n    SETUP,\n    PLAY,\n    RECORD,\n    TEARDOWN,\n    // GET_PARAMETER,\n    // SET_PARAMETER,\n}\n\nfunction Name(method)\n{\n    for(let key in names) {\n        if(names[key] === method)\n            return key;\n    }\n\n    return undefined;\n}\n\nfunction Parse(token)\n{\n    if(token.empty)\n        return undefined;\n\n    for(let key in names) {\n        if(key.length == token.length &&\n           token.startsWith(key))\n        {\n            return names[key];\n        }\n    }\n\n    return undefined;\n}\n\n\n//# sourceURL=webpack://WebRTSP/./WebRTSP/RtspMethod.mjs?");

/***/ }),

/***/ "./WebRTSP/RtspParse.mjs":
/*!*******************************!*\
  !*** ./WebRTSP/RtspParse.mjs ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ContentType\": () => (/* binding */ ContentType),\n/* harmony export */   \"IsRequest\": () => (/* binding */ IsRequest),\n/* harmony export */   \"ParseOptions\": () => (/* binding */ ParseOptions),\n/* harmony export */   \"ParseParameters\": () => (/* binding */ ParseParameters),\n/* harmony export */   \"ParseRequest\": () => (/* binding */ ParseRequest),\n/* harmony export */   \"ParseResponse\": () => (/* binding */ ParseResponse)\n/* harmony export */ });\n/* harmony import */ var _Token_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Token.mjs */ \"./WebRTSP/Token.mjs\");\n/* harmony import */ var _ParseBuffer_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ParseBuffer.mjs */ \"./WebRTSP/ParseBuffer.mjs\");\n/* harmony import */ var _RtspProtocol_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RtspProtocol.mjs */ \"./WebRTSP/RtspProtocol.mjs\");\n/* harmony import */ var _RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RtspMethod.mjs */ \"./WebRTSP/RtspMethod.mjs\");\n/* harmony import */ var _RtspRequest_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RtspRequest.mjs */ \"./WebRTSP/RtspRequest.mjs\");\n/* harmony import */ var _RtspResponse_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./RtspResponse.mjs */ \"./WebRTSP/RtspResponse.mjs\");\n\n\n\n\n\n\n\nfunction IsWSP(c)\n{\n    if(c.length != 1)\n        return false;\n\n    return c == ' ' || c == '\\t';\n}\n\nfunction IsCtl(c)\n{\n    if(c.length != 1)\n        return false;\n\n    const code = c.charCodeAt(0);\n    return (code >= 0 && code <= 31) || code == 127;\n}\n\nfunction IsDigit(c)\n{\n    if(c.length != 1)\n        return false;\n\n    switch(c) {\n    case '0':\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n        return true;\n    }\n\n    return false;\n}\n\nfunction ParseDigit(c)\n{\n    if(c.length != 1)\n        return undefined;\n\n    switch(c) {\n    case '0':\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n    default:\n        return undefined;\n    }\n}\n\nfunction IsTspecials(c)\n{\n    if(c.length != 1)\n        return false;\n\n    switch(c) {\n    case '(':\n    case ')':\n    case '<':\n    case '>':\n    case '@':\n    case ',':\n    case ';':\n    case ':':\n    case '\\\\':\n    case '\"':\n    case '/':\n    case '[':\n    case ']':\n    case '?':\n    case '=':\n    case '{':\n    case '}':\n    case ' ':\n    case '\\t':\n        return true;\n    }\n\n    return false;\n}\n\nfunction SkipWSP(parseBuffer)\n{\n    let savePos = parseBuffer.pos;\n\n    for(; parseBuffer.pos < parseBuffer.length && IsWSP(parseBuffer.currentChar); parseBuffer.advance());\n\n    return savePos != parseBuffer.pos;\n}\n\nfunction SkipEOL(parseBuffer)\n{\n    switch(parseBuffer.currentChar) {\n    case '\\n':\n        parseBuffer.advance();\n        return true;\n    case '\\r':\n        parseBuffer.advance();\n        if(!parseBuffer.eos && parseBuffer.currentChar == '\\n')\n            parseBuffer.advance();\n        return true;\n    }\n\n    return false;\n}\n\nfunction SkipFolding(parseBuffer)\n{\n    let tmpParseBuffer = parseBuffer.clone();\n\n    if(!SkipEOL(tmpParseBuffer))\n        return false;\n    if(!SkipWSP(tmpParseBuffer))\n        return false;\n\n    parseBuffer.assign(tmpParseBuffer);\n    return true;\n}\n\nfunction SkipLWS(parseBuffer)\n{\n    let tmpParseBuffer = parseBuffer.clone();\n\n    SkipEOL(tmpParseBuffer);\n    if(!SkipWSP(tmpParseBuffer))\n        return false;\n\n    parseBuffer.assign(tmpParseBuffer);\n\n    return true;\n}\n\nfunction Skip(parseBuffer, c)\n{\n    if(parseBuffer.eos)\n        return false;\n\n    if(parseBuffer.currentChar == c) {\n        parseBuffer.advance();\n        return true;\n    }\n\n    return false;\n}\n\nfunction SkipNot(parseBuffer, c)\n{\n    while(!parseBuffer.eos) {\n        if(parseBuffer.currentChar == c)\n            return true;\n\n        parseBuffer.advance();\n    }\n\n    return false;\n}\n\nfunction GetToken(parseBuffer)\n{\n    let token = new _Token_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](parseBuffer);\n\n    for(; !parseBuffer.eos; parseBuffer.advance()) {\n        if(IsCtl(parseBuffer.currentChar) || IsTspecials(parseBuffer.currentChar))\n            break;\n    }\n\n    token.length = parseBuffer.pos - token.pos;\n    if(!token.empty)\n        return token;\n    else\n        return undefined;\n}\n\nfunction GetProtocol(parseBuffer)\n{\n    let token  = new _Token_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](parseBuffer);\n\n    const protocolName = \"WEBRTSP\";\n    const protocolNameLength = protocolName.length;\n\n    if(parseBuffer.tailLength < protocolNameLength + 4)\n        return undefined;\n\n    if(!parseBuffer.startsWith(protocolName))\n        return undefined;\n    parseBuffer.advance(protocolNameLength);\n\n    if(parseBuffer.currentChar != '/')\n        return undefined;\n    parseBuffer.advance();\n\n    if(!IsDigit(parseBuffer.currentChar))\n        return undefined;\n    parseBuffer.advance();\n\n    if(parseBuffer.currentChar != '.')\n        return undefined;\n    parseBuffer.advance();\n\n    if(!IsDigit(parseBuffer.currentChar))\n        return undefined;\n    parseBuffer.advance();\n\n    token.length = parseBuffer.pos - token.pos;\n\n    return token;\n}\n\nfunction GetURI(parseBuffer)\n{\n    // FIXME! fix according to rfc\n\n    let uriToken = new _Token_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](parseBuffer);\n\n    for(; !parseBuffer.eos; parseBuffer.advance()) {\n        if(IsCtl(parseBuffer.currentChar) || parseBuffer.currentChar == ' ')\n            break;\n    }\n\n    uriToken.length = parseBuffer.pos - uriToken.pos;\n\n    if(!uriToken.empty)\n        return uriToken;\n    else\n        return undefined;\n}\n\nfunction ParseMethodLine(parseBuffer, request)\n{\n    const methodToken = GetToken(parseBuffer);\n    if(!methodToken)\n        return false;\n\n    request.method = _RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_3__.Parse(methodToken);\n    if(!request.method)\n        return false;\n\n    if(!SkipWSP(parseBuffer))\n        return false;\n\n    const uriToken = GetURI(parseBuffer);\n    if(!uriToken)\n        return false;\n    request.uri = uriToken.string;\n\n    if(!SkipWSP(parseBuffer))\n        return false;\n\n    const protocolToken = GetProtocol(parseBuffer);\n    if(!protocolToken)\n        return false;\n\n    request.protocol = _RtspProtocol_mjs__WEBPACK_IMPORTED_MODULE_2__.Parse(protocolToken);\n    if(!request.protocol)\n        return false;\n\n    if(!SkipEOL(parseBuffer))\n        return false;\n\n    return true;\n}\n\nfunction ParseHeaderField(parseBuffer, headerFields)\n{\n    const nameToken = GetToken(parseBuffer);\n    if(nameToken.empty)\n        return false;\n\n    if(!Skip(parseBuffer, ':'))\n        return false;\n\n    SkipLWS(parseBuffer);\n\n    const valueToken = new _Token_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](parseBuffer);\n\n    while(!parseBuffer.eos) {\n        const tmpPos = parseBuffer.pos;\n        if(SkipFolding(parseBuffer))\n            continue;\n        else if(SkipEOL(parseBuffer)) {\n            const lowerName = nameToken.string.toLowerCase();\n            valueToken.length = tmpPos - valueToken.pos;\n\n            headerFields.set(lowerName, valueToken.string);\n\n            return true;\n        } else if(!IsCtl(parseBuffer.currentChar))\n            parseBuffer.advance();\n        else\n            return false;\n    }\n\n    return false;\n}\n\nfunction ParseCSeq(token, out)\n{\n    let cseq = 0;\n\n    for(let c of token) {\n        if(!IsDigit(c))\n            return false;\n\n        const digit = ParseDigit(c);\n\n        if(cseq > (cseq * 10 + digit)) {\n            // overflow\n            return false;\n        }\n\n        cseq = cseq * 10 + digit;\n    }\n\n    if(!cseq)\n        return false;\n\n    if(out)\n        out.cseq = cseq;\n\n    return true;\n}\n\nfunction ParseRequest(buffer)\n{\n    let parseBuffer = new _ParseBuffer_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"](buffer);\n    let request = new _RtspRequest_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n\n    if(!ParseMethodLine(parseBuffer, request))\n        return undefined;\n\n    while(!parseBuffer.eos) {\n        if(!ParseHeaderField(parseBuffer, request.headerFields))\n            return undefined;\n        if(SkipEOL(parseBuffer))\n            break;\n    }\n\n    if(!parseBuffer.eos)\n        request.body = parseBuffer.tail;\n\n    const cseqValue = request.headerFields.get(\"cseq\");\n    if(!cseqValue)\n        return undefined;\n\n    if(!ParseCSeq(cseqValue, request))\n        return undefined;\n\n    request.headerFields.delete(\"cseq\");\n\n    const sessionValue = request.headerFields.get(\"session\");\n    if(sessionValue) {\n        request.session = sessionValue;\n        request.headerFields.delete(\"session\");\n    }\n\n    return request;\n}\n\nfunction GetStatusCode(parseBuffer)\n{\n    let token = new _Token_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](parseBuffer);\n\n    if(parseBuffer.tailLength < 3)\n        return undefined;\n\n    for(let i = 0; i < 3 && !parseBuffer.eos; ++i, parseBuffer.advance())\n        if(!IsDigit(parseBuffer.currentChar))\n            return undefined;\n\n    token.length = 3;\n\n    return token;\n}\n\nfunction ParseStatusCode(token)\n{\n    if(token.empty || token.length < 3)\n        return 0;\n\n    return ParseDigit(token.charAt(0)) * 100 +\n        ParseDigit(token.charAt(1)) * 10 +\n        ParseDigit(token.charAt(2)) * 1;\n}\n\nfunction GetReasonPhrase(parseBuffer)\n{\n    let token = new _Token_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](parseBuffer);\n\n    for(; !parseBuffer.eos; parseBuffer.advance()) {\n        if(IsCtl(parseBuffer.currentChar))\n            break;\n    }\n\n    token.length = parseBuffer.pos - token.pos;\n\n    return token;\n}\n\nfunction ParseStatusLine(parseBuffer, response)\n{\n    let protocolToken = GetProtocol(parseBuffer);\n    if(!protocolToken || protocolToken.empty)\n        return false;\n\n    response.protocol = _RtspProtocol_mjs__WEBPACK_IMPORTED_MODULE_2__.Parse(protocolToken);\n    if(!response.protocol)\n        return false;\n\n    if(!SkipWSP(parseBuffer))\n        return false;\n\n    const statusCodeToken = GetStatusCode(parseBuffer);\n    if(!statusCodeToken)\n        return false;\n\n    response.statusCode = ParseStatusCode(statusCodeToken);\n\n    if(!SkipWSP(parseBuffer))\n        return false;\n\n    const reasonPhrase = GetReasonPhrase(parseBuffer);\n    if(reasonPhrase.empty)\n        return false;\n\n    response.reasonPhrase = reasonPhrase.string;\n\n    if(!SkipEOL(parseBuffer))\n        return false;\n\n    return true;\n}\n\nfunction ParseResponse(buffer)\n{\n    let parseBuffer = new _ParseBuffer_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"](buffer);\n    let response = new _RtspResponse_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\n\n    if(!ParseStatusLine(parseBuffer, response))\n        return undefined;\n\n    while(!parseBuffer.eos) {\n        if(!ParseHeaderField(parseBuffer, response.headerFields))\n            return undefined;\n        if(SkipEOL(parseBuffer))\n            break;\n    }\n\n    if(!parseBuffer.eos)\n        response.body = parseBuffer.tail;\n\n    const cseqValue = response.headerFields.get(\"cseq\");\n    if(!cseqValue)\n        return undefined;\n\n    if(!ParseCSeq(cseqValue, response))\n        return undefined;\n\n    response.headerFields.delete(\"cseq\");\n\n    const sessionValue = response.headerFields.get(\"session\");\n    if(sessionValue) {\n        response.session = sessionValue;\n        response.headerFields.delete(\"session\");\n    }\n\n    return response;\n}\n\nfunction ParseOptions(response)\n{\n    const options = response.headerFields.get(\"public\");\n    if(!options)\n        return undefined;\n\n    let parsedOptions = new Set();\n\n    let parseBuffer = new _ParseBuffer_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"](options);\n    while(!parseBuffer.eos) {\n        SkipWSP(parseBuffer);\n\n        const methodToken = GetToken(parseBuffer);\n        if(!methodToken)\n            return undefined;\n\n        const method = _RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_3__.Parse(methodToken);\n        if(!method)\n            return undefined;\n\n        SkipWSP(parseBuffer);\n\n        if(!parseBuffer.eos && !Skip(parseBuffer, ','))\n            return returnOptions;\n\n        parsedOptions.add(method);\n    }\n\n    return parsedOptions;\n}\n\nfunction ParseParameter(parseBuffer)\n{\n    const namePos = parseBuffer.pos;\n\n    if(!SkipNot(parseBuffer, ':'))\n        return undefined;\n\n    const name = parseBuffer.substringFrom(namePos);\n    if(!name)\n        return undefined;\n\n    if(!Skip(parseBuffer, ':'))\n        return undefined;\n\n    SkipWSP(parseBuffer);\n\n    const valuePos = parseBuffer.pos;\n\n    while(!parseBuffer.eos) {\n        const tmpPos = parseBuffer.pos;\n        if(SkipEOL(parseBuffer)) {\n            const value = parseBuffer.substring(valuePos, tmpPos);\n            return { name, value }\n        } else if(!IsCtl(parseBuffer.currentChar))\n            parseBuffer.advance()\n        else\n            return undefined;\n    }\n\n    return undefined;\n}\n\nfunction ParseParameters(body)\n{\n    let parameters = new Map;\n\n    let parseBuffer = new _ParseBuffer_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"](body);\n    while(!parseBuffer.eos) {\n        const { name, value } = ParseParameter(parseBuffer, parameters) || {};\n\n        if(!name)\n            return undefined;\n\n        parameters.set(name, value);\n    }\n\n    return parameters;\n}\n\nfunction IsRequest(buffer)\n{\n    let parseBuffer = new _ParseBuffer_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"](buffer);\n    let request = new _RtspRequest_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n\n    const methodToken = GetToken(parseBuffer);\n    if(!methodToken)\n        return false;\n\n    request.method = _RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_3__.Parse(methodToken);\n    if(!request.method)\n        return false;\n\n    return true;\n}\n\nfunction ContentType(message)\n{\n    return message.headerFields.get(\"content-type\");\n}\n\n\n//# sourceURL=webpack://WebRTSP/./WebRTSP/RtspParse.mjs?");

/***/ }),

/***/ "./WebRTSP/RtspProtocol.mjs":
/*!**********************************!*\
  !*** ./WebRTSP/RtspProtocol.mjs ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Name\": () => (/* binding */ Name),\n/* harmony export */   \"Parse\": () => (/* binding */ Parse),\n/* harmony export */   \"WEBRTSP_0_2\": () => (/* binding */ WEBRTSP_0_2)\n/* harmony export */ });\nconst WEBRTSP_0_2 = 2;\n\nconst names =\n{\n    [WEBRTSP_0_2] : \"WEBRTSP/0.2\",\n}\n\nfunction Name(protocol)\n{\n    return names[protocol];\n}\n\nfunction Parse(token)\n{\n    if(token.empty)\n        return undefined;\n\n    for(let key in names) {\n        if(names[key].length == token.length &&\n           token.startsWith(names[key]))\n        {\n            return ~~key;\n        }\n    }\n\n    return undefined;\n}\n\n\n//# sourceURL=webpack://WebRTSP/./WebRTSP/RtspProtocol.mjs?");

/***/ }),

/***/ "./WebRTSP/RtspRequest.mjs":
/*!*********************************!*\
  !*** ./WebRTSP/RtspRequest.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Request)\n/* harmony export */ });\nclass Request\n{\n    constructor() {\n        this.method = null;\n        this.uri = null;\n        this.protocol = null;\n        this.cseq = null;\n        this.session = null;\n\n        this.headerFields = new Map();\n\n        this.body = null;\n    }\n}\n\n\n//# sourceURL=webpack://WebRTSP/./WebRTSP/RtspRequest.mjs?");

/***/ }),

/***/ "./WebRTSP/RtspResponse.mjs":
/*!**********************************!*\
  !*** ./WebRTSP/RtspResponse.mjs ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Response)\n/* harmony export */ });\nclass Response\n{\n    constructor() {\n        this.protocol = null;\n        this.statusCode = null;\n        this.reasonPhrase = null;\n        this.cseq = null;\n        this.session = null;\n\n        this.headerFields = new Map();\n\n        this.body = null;\n    }\n}\n\n\n//# sourceURL=webpack://WebRTSP/./WebRTSP/RtspResponse.mjs?");

/***/ }),

/***/ "./WebRTSP/RtspSerialize.mjs":
/*!***********************************!*\
  !*** ./WebRTSP/RtspSerialize.mjs ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SerializeRequest\": () => (/* binding */ SerializeRequest),\n/* harmony export */   \"SerializeResponse\": () => (/* binding */ SerializeResponse)\n/* harmony export */ });\n/* harmony import */ var _RtspProtocol_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RtspProtocol.mjs */ \"./WebRTSP/RtspProtocol.mjs\");\n/* harmony import */ var _RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RtspMethod.mjs */ \"./WebRTSP/RtspMethod.mjs\");\n\n\n\nfunction SerializeStatusCode(statusCode)\n{\n    if(statusCode > 999)\n        return \"999\";\n    else if(statusCode < 100)\n        return \"100\";\n    else\n        return statusCode.toString();\n}\n\nfunction SerializeRequest(request)\n{\n    let out = _RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__.Name(request.method);\n    out += \" \";\n    out += request.uri;\n    out += \" \";\n    out += _RtspProtocol_mjs__WEBPACK_IMPORTED_MODULE_0__.Name(request.protocol);\n    out += \"\\r\\n\";\n\n    out += \"CSeq: \";\n    out += request.cseq.toString();\n    out += \"\\r\\n\";\n\n    if(request.session) {\n        out += \"Session: \";\n        out += request.session;\n        out += \"\\r\\n\";\n    }\n\n    for(let [key, value] of request.headerFields) {\n        out += key;\n        out += \": \";\n        out += value;\n        out += \"\\r\\n\";\n    }\n\n    if(request.body) {\n        out +=\"\\r\\n\";\n        out += request.body;\n    }\n\n    return out;\n}\n\nfunction SerializeResponse(response)\n{\n    let out = _RtspProtocol_mjs__WEBPACK_IMPORTED_MODULE_0__.Name(response.protocol);\n    out += \" \";\n    out += SerializeStatusCode(response.statusCode);\n    out += \" \";\n    out += response.reasonPhrase;\n    out += \"\\r\\n\";\n\n    out += \"CSeq: \";\n    out += response.cseq.toString();\n    out += \"\\r\\n\";\n\n    if(response.session) {\n        out += \"Session: \";\n        out += response.session;\n        out += \"\\r\\n\";\n    }\n\n    for(let [key, value] of response.headerFields) {\n        out += key;\n        out += \": \";\n        out += value;\n        out += \"\\r\\n\";\n    }\n\n    if(response.body) {\n        out +=\"\\r\\n\";\n        out += response.body;\n    }\n\n    return out;\n}\n\n\n//# sourceURL=webpack://WebRTSP/./WebRTSP/RtspSerialize.mjs?");

/***/ }),

/***/ "./WebRTSP/RtspSession.mjs":
/*!*********************************!*\
  !*** ./WebRTSP/RtspSession.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Session)\n/* harmony export */ });\n/* harmony import */ var _RtspProtocol_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RtspProtocol.mjs */ \"./WebRTSP/RtspProtocol.mjs\");\n/* harmony import */ var _RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RtspMethod.mjs */ \"./WebRTSP/RtspMethod.mjs\");\n/* harmony import */ var _RtspStatusCode_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RtspStatusCode.mjs */ \"./WebRTSP/RtspStatusCode.mjs\");\n/* harmony import */ var _RtspRequest_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RtspRequest.mjs */ \"./WebRTSP/RtspRequest.mjs\");\n/* harmony import */ var _RtspResponse_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RtspResponse.mjs */ \"./WebRTSP/RtspResponse.mjs\");\n\n\n\n\n\n\nclass Session\n{\n\nconstructor(sendRequest, sendResponse) {\n    this._sendRequest = (request) => {\n        if(request && !request.uri) {\n            console.error(\"Missing uri in webrtsp request\");\n            sendRequest(null);\n        } else {\n            sendRequest(request);\n        }\n    }\n    this._sendResponse = sendResponse;\n\n    this._nextCSeq = 1;\n    \n    this._sentRequests = new Map();\n}\n\ndisconnect()\n{\n    this._sendRequest(undefined);\n}\n\ncreateRequest(method, uri, session)\n{\n    for(;this._sentRequests.has(this._nextCSeq); ++this._nextCSeq);\n\n    let request = new _RtspRequest_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n    request.method = method;\n    request.protocol = _RtspProtocol_mjs__WEBPACK_IMPORTED_MODULE_0__.WEBRTSP_0_2;\n    request.cseq = this._nextCSeq;\n    request.uri = uri;\n\n    if(session)\n        request.session = session;\n    \n    this._sentRequests.set(this._nextCSeq, request);\n\n    return request;\n}\n\nrequestOptions(uri)\n{\n    let request = this.createRequest(_RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__.OPTIONS, uri);\n    this._sendRequest(request);\n\n    return request.cseq;\n}\n\nrequestList(uri)\n{\n    let request = this.createRequest(_RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__.LIST, uri);\n    this._sendRequest(request);\n\n    return request.cseq;\n}\n\nrequestSetup(uri, contentType, session, body)\n{\n    let request = this.createRequest(_RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__.SETUP, uri, session);\n\n    request.headerFields.set(\"Content-Type\", contentType);\n    request.body = body;\n\n    this._sendRequest(request);\n}\n\nrequestDescribe(uri)\n{\n    let request = this.createRequest(_RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__.DESCRIBE, uri);\n\n    this._sendRequest(request);\n\n    return request.cseq;\n}\n\nrequestPlay(uri, session, sdp)\n{\n    let request = this.createRequest(_RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__.PLAY, uri, session);\n\n    request.headerFields.set(\"Content-Type\", \"application/sdp\");\n    request.body = sdp;\n\n    this._sendRequest(request);\n\n    return request.cseq;\n}\n\nrequestTeardown(uri, session)\n{\n    let request = this.createRequest(_RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__.TEARDOWN, uri, session);\n\n    this._sendRequest(request);\n\n    return request.cseq;\n}\n\ncreateResponse(statusCode, reasonPhrase, cseq, session)\n{\n    let response = new _RtspResponse_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\n    response.protocol = _RtspProtocol_mjs__WEBPACK_IMPORTED_MODULE_0__.WEBRTSP_0_2;\n    response.statusCode = statusCode;\n    response.reasonPhrase = reasonPhrase;\n    response.cseq = cseq;\n\n    if(session)\n        response.headerFields.set(\"Session\", session);\n\n    return response;\n}\n\nsendOkResponse(cseq, session)\n{\n    const response = this.createResponse(_RtspStatusCode_mjs__WEBPACK_IMPORTED_MODULE_2__.OK, \"OK\", cseq, session);\n    this._sendResponse(response);\n}\n\nhandleRequest(request)\n{\n    switch(request.method) {\n    case _RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__.SETUP:\n        if(this.handleSetupRequest)\n            return this.handleSetupRequest(request);\n        else\n            return false;\n    default:\n        return false;\n    }\n}\n\nhandleResponse(response)\n{\n    const request = this._sentRequests.get(response.cseq);\n    if(!request)\n        return false;\n\n    this._sentRequests.delete(response.cseq);\n\n    switch(request.method) {\n        case _RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__.OPTIONS:\n            if(this.onOptionsResponse)\n                return this.onOptionsResponse(request, response);\n            else\n                return false;\n        case _RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__.LIST:\n            if(this.onListResponse)\n                return this.onListResponse(request, response);\n            else\n                return false;\n        case _RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__.DESCRIBE:\n            if(this.onDescribeResponse)\n                return this.onDescribeResponse(request, response);\n            else\n                return false;\n        case _RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__.SETUP:\n            if(this.onSetupResponse)\n                return this.onSetupResponse(request, response);\n            else\n                return false;\n        case _RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__.PLAY:\n            if(this.onPlayResponse)\n                return this.onPlayResponse(request, response);\n            else\n                return false;\n        case _RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_1__.TEARDOWN:\n            if(this.onTeardownResponse)\n                return this.onTeardownResponse(request, response);\n            else\n                return false;\n        default:\n            return false;\n    }\n}\n\n}\n\n\n//# sourceURL=webpack://WebRTSP/./WebRTSP/RtspSession.mjs?");

/***/ }),

/***/ "./WebRTSP/RtspStatusCode.mjs":
/*!************************************!*\
  !*** ./WebRTSP/RtspStatusCode.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"OK\": () => (/* binding */ OK),\n/* harmony export */   \"Unauthorized\": () => (/* binding */ Unauthorized)\n/* harmony export */ });\nconst OK = 200;\nconst Unauthorized = 401;\n\n\n//# sourceURL=webpack://WebRTSP/./WebRTSP/RtspStatusCode.mjs?");

/***/ }),

/***/ "./WebRTSP/Token.mjs":
/*!***************************!*\
  !*** ./WebRTSP/Token.mjs ***!
  \***************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Token)\n/* harmony export */ });\nclass Token\n{\n    constructor(parseBuffer) {\n        this.buffer = parseBuffer.buffer;\n        this.pos = parseBuffer.pos;\n        this.length = 0;\n    }\n\n    get string() {\n        return this.buffer.substr(this.pos, this.length);\n    }\n    get empty() {\n        if(!this.buffer || !this.length)\n            return true;\n\n        return this.pos >= this.buffer.length;\n    }\n\n    charAt(index) {\n        return this.buffer.charAt(this.pos + index);\n    }\n    charCodeAt(index) {\n        return this.buffer.charCodeAt(this.pos + index);\n    }\n    startsWith(searchString) {\n        return this.buffer.startsWith(searchString, this.pos);\n    }\n}\n\n\n//# sourceURL=webpack://WebRTSP/./WebRTSP/Token.mjs?");

/***/ }),

/***/ "./WebRTSP/WebRTSP.mjs":
/*!*****************************!*\
  !*** ./WebRTSP/WebRTSP.mjs ***!
  \*****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WebRTSP\": () => (/* binding */ WebRTSP)\n/* harmony export */ });\n/* harmony import */ var _RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RtspMethod.mjs */ \"./WebRTSP/RtspMethod.mjs\");\n/* harmony import */ var _RtspSession_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RtspSession.mjs */ \"./WebRTSP/RtspSession.mjs\");\n/* harmony import */ var _RtspSerialize_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RtspSerialize.mjs */ \"./WebRTSP/RtspSerialize.mjs\");\n/* harmony import */ var _RtspParse_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RtspParse.mjs */ \"./WebRTSP/RtspParse.mjs\");\n/* harmony import */ var _RtspStatusCode_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RtspStatusCode.mjs */ \"./WebRTSP/RtspStatusCode.mjs\");\n\n\n\n\n\n\n\n\nclass ClientSession extends _RtspSession_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n{\n\nconstructor(sendRequest, sendResponse, events, iceServers) {\n    super(sendRequest, sendResponse);\n\n    this._events = events;\n\n    this._streamerName = null;\n    this._encodedStreamerName = null;\n    this._session = null;\n    this._iceCandidates = [];\n\n    Object.defineProperty(this, \"peerConnection\", {\n        value: new RTCPeerConnection({ iceServers }),\n        writable: false\n    })\n\n    this.peerConnection.onicecandidate =\n        (event) => { this._onIceCandidate(event); };\n    this.peerConnection.onicegatheringstatechange =\n        (event) => { this._onIceGatheringStateChange(event); };\n    this.peerConnection.oniceconnectionstatechange =\n        (event) => { this._onIceConnectionStateChange(event); };\n}\n\nget streamerName() {\n    return this._streamerName;\n}\n\nset streamerName(name) {\n    this._streamerName = name;\n    this._encodedStreamerName = name ? encodeURI(name) : null;\n}\n\nonConnected()\n{\n    this.requestOptions(this._encodedStreamerName || \"*\");\n}\n\nhandleMessage(message)\n{\n    if(_RtspParse_mjs__WEBPACK_IMPORTED_MODULE_3__.IsRequest(message)) {\n        const request = _RtspParse_mjs__WEBPACK_IMPORTED_MODULE_3__.ParseRequest(message);\n        if(!request) {\n            console.error(`Failed to parse message:\\n${message}`)\n            this.disconnect();\n            return;\n        }\n\n        if(!this.handleRequest(request)) {\n            console.error(`Failed to handle message:\\n${message}\\nDisconnecting...`)\n            this.disconnect();\n            return;\n        }\n    } else {\n        const response = _RtspParse_mjs__WEBPACK_IMPORTED_MODULE_3__.ParseResponse(message);\n        if(!response) {\n            console.error(`Failed to parse message:\\n${message}`)\n            this.disconnect();\n            return;\n        }\n\n        if(response.statusCode == _RtspStatusCode_mjs__WEBPACK_IMPORTED_MODULE_4__.Unauthorized) {\n            this._events.dispatchEvent(new CustomEvent(\"unauthorized\"));\n            console.error(\"Got \\\"Unauthorized\\\" response. Disconnecting...\")\n            this.disconnect();\n        } else if(!this.handleResponse(response)) {\n            console.error(`Failed to handle message:\\n${message}\\nDisconnecting...`)\n            this.disconnect();\n        }\n    }\n}\n\nonOptionsResponse(request, response)\n{\n    const options = (0,_RtspParse_mjs__WEBPACK_IMPORTED_MODULE_3__.ParseOptions)(response)\n    if(!options)\n        return false;\n\n    this.options = options;\n\n    if(!this._encodedStreamerName && this.options.has(_RtspMethod_mjs__WEBPACK_IMPORTED_MODULE_0__.LIST)) {\n        this.requestList(\"*\");\n\n        return true;\n    }\n\n    if(!this._encodedStreamerName)\n        this.streamerName = \"*\";\n\n    this.requestDescribe(this._encodedStreamerName);\n\n    return true;\n}\n\nonListResponse(request, response)\n{\n    if((0,_RtspParse_mjs__WEBPACK_IMPORTED_MODULE_3__.ContentType)(response) != \"text/parameters\")\n        return false;\n\n    const list = (0,_RtspParse_mjs__WEBPACK_IMPORTED_MODULE_3__.ParseParameters)(response.body);\n    if(!list) {\n        console.error(\"LIST response parsing failed\")\n        return false;\n    }\n\n    this.list = new Map;\n    list.forEach((value, key) => {\n        this.list.set(decodeURI(key), value);\n    })\n\n    if(!this._events.dispatchEvent(new CustomEvent(\"list\", { detail: { list: this.list } })))\n        return false;\n\n    if(!this._encodedStreamerName) {\n        if(list.size > 0)\n            this.streamerName = list.keys().next().value;\n        else\n            this.streamerName = \"*\";\n    }\n\n    console.info(`Requesting \"${this._streamerName}\" streamer...`);\n\n    this.requestDescribe(this._encodedStreamerName);\n\n    return true;\n}\n\nonDescribeResponse(request, response)\n{\n    if(_RtspStatusCode_mjs__WEBPACK_IMPORTED_MODULE_4__.OK != response.statusCode)\n        return false;\n\n    if(!response.session)\n        return false;\n\n    this._session = response.session;\n\n    const offer = response.body;\n    const promise =\n        this.peerConnection.setRemoteDescription(\n            { type : \"offer\", sdp : offer });\n    promise\n        .then(() => {\n            this._sendPlay();\n        }).\n        catch((event) => {\n            console.error(\"setRemoteDescription fail\", event);\n        });\n\n    return true;\n}\n\nhandleSetupRequest(request)\n{\n    const contentType = request.headerFields.get(\"content-type\");\n    if(!contentType || contentType != \"application/x-ice-candidate\")\n        return false;\n\n    const iceCandidate = request.body;\n    if(!iceCandidate)\n        return false;\n\n    const separatorIndex = iceCandidate.indexOf(\"/\");\n    if(separatorIndex == -1 || separatorIndex == 0)\n        return false;\n\n    const eolIndex = iceCandidate.indexOf(\"\\r\\n\", separatorIndex);\n    if(eolIndex == -1 || eolIndex == 0)\n        return false;\n\n    const sdpMLineIndex = iceCandidate.substring(0, separatorIndex);\n    let candidate = iceCandidate.substring(separatorIndex + 1, eolIndex);\n\n    if(candidate == \"a=end-of-candidates\")\n        candidate = null;\n    else\n        candidate = { sdpMLineIndex, candidate };\n\n    if(this.peerConnection.iceGatheringState == \"complete\")\n        this._addIceCandidate(candidate);\n    else\n        this._iceCandidates.push(candidate);\n\n    this.sendOkResponse(request.cseq, request.session);\n\n    return true;\n}\n\nonSetupResponse(request, response)\n{\n    if(_RtspStatusCode_mjs__WEBPACK_IMPORTED_MODULE_4__.OK != response.statusCode)\n        return false;\n\n    return true;\n}\n\nonPlayResponse(request, response)\n{\n    if(_RtspStatusCode_mjs__WEBPACK_IMPORTED_MODULE_4__.OK != response.statusCode)\n        return false;\n\n    return true;\n}\n\nclose() {\n    this.peerConnection.close();\n}\n\n\n async _sendPlay()\n{\n    const answer =\n        await this.peerConnection.createAnswer()\n            .catch(function (event) {\n                console.error(\"createAnswer fail\", event);\n            });\n\n    await this.peerConnection.setLocalDescription(answer)\n        .catch(function (event) {\n            console.error(\"setLocalDescription fail\", event);\n        });\n\n    await this.requestPlay(this._encodedStreamerName, this._session, answer.sdp);\n}\n\nasync _onIceCandidate(event)\n{\n    let candidate;\n    if(event.candidate && event.candidate.candidate)\n        candidate =\n            event.candidate.sdpMLineIndex.toString() + \"/\" + event.candidate.candidate + \"\\r\\n\";\n    else\n        candidate = \"0/a=end-of-candidates\\r\\n\";\n\n    await this.requestSetup(\n        this._encodedStreamerName,\n        \"application/x-ice-candidate\",\n        this._session,\n        candidate);\n}\n\n_onIceGatheringStateChange()\n{\n    if(this.peerConnection.iceGatheringState == \"complete\") {\n        this._iceCandidates.forEach(candidate => this._addIceCandidate(candidate));\n        this._iceCandidates.length = 0;\n    }\n}\n\n_addIceCandidate(candidate)\n{\n    const promise =\n        this.peerConnection.addIceCandidate(candidate);\n    promise.catch((event) => {\n            console.error(\"addIceCandidate fail\", event);\n        });\n}\n\n_onIceConnectionStateChange()\n{\n    console.debug(`ICE connection state changed to: ${this.peerConnection.iceConnectionState}`);\n}\n\n}\n\nclass WebRTSP\n{\n\nconstructor(videoElement, iceServers, { debug })\n{\n    Object.defineProperty(this, \"events\", {\n        value: new EventTarget(),\n        writable: false\n    })\n\n    this._debug = debug;\n\n    this._iceServers = iceServers;\n\n    this._url = null;\n    this._streamerName = null;\n\n    this._video = videoElement;\n\n    this._socket = null;\n    this._session = null;\n\n    this._enableReconnect = true;\n\n    this._reconnectTimeoutId = null;\n\n    this.events.addEventListener(\"unauthorized\", (event) => {\n        this._enableReconnect = false;\n        setTimeout(() => { window.location.reload(); });\n    });\n}\n\n_onSocketOpen()\n{\n    console.info(\"Connected.\");\n\n    this._session =\n        new ClientSession(\n            (request) => { this._sendRequest(request); },\n            (response) => { this._sendResponse(response); },\n            this.events,\n            this._iceServers\n        );\n\n    this._session.streamerName = this._streamerName;\n\n    this._session.peerConnection.ontrack =\n        (event) => { this._onTrack(event); };\n\n    this._session.onConnected();\n}\n\n_onTrack(event)\n{\n    this._video.srcObject = event.streams[0];\n}\n\n_scheduleReconnect()\n{\n    if(this._reconnectTimeoutId)\n        return;\n\n    const reconnectTimout = 1 + Math.floor(Math.random() * 5);\n\n    console.info(`Scheduling reconnect in ${reconnectTimout} seconds...`);\n\n    this._reconnectTimeoutId =\n        setTimeout(\n            () => {\n                this._reconnectTimeoutId = null;\n                this.reconnect();\n            }, reconnectTimout * 1000);\n}\n\n_onSocketClose(socket)\n{\n    console.info(\"Disconnected.\");\n\n    if(socket == this._socket) {\n        this._close();\n\n        if(this._enableReconnect && this._url && this._streamerName)\n            this._scheduleReconnect();\n    }\n\n    socket.onopen = undefined;\n    socket.onclose = undefined;\n    socket.onerror = undefined;\n    socket.onmessage = undefined;\n\n    this.events.dispatchEvent(new Event(\"disconnected\"));\n}\n\n_onSocketError(socket, error)\n{\n    console.error(error.message);\n\n    if(socket == this._socket)\n        this._close();\n}\n\n_onSocketMessage(event)\n{\n    if(this._debug)\n        console.debug(event.data);\n\n    this._session.handleMessage(event.data);\n}\n\n_close()\n{\n    if(this._session) {\n        this._session.peerConnection.ontrack = undefined;\n        this._session.close();\n        this._session = null;\n    }\n\n    if(this._socket) {\n        this._socket.close();\n        this._socket = null;\n    }\n}\n\n_sendRequest(request)\n{\n    if(!request) {\n        this._close();\n        return;\n    }\n\n    const requestMessage = _RtspSerialize_mjs__WEBPACK_IMPORTED_MODULE_2__.SerializeRequest(request);\n\n    if(!requestMessage) {\n        this._close();\n        return;\n    }\n\n    if(this._debug)\n        console.debug(requestMessage);\n\n    this._socket.send(requestMessage);\n}\n\n_sendResponse(response)\n{\n    if(!response) {\n        this._close();\n        return;\n    }\n\n    const responseMessage = _RtspSerialize_mjs__WEBPACK_IMPORTED_MODULE_2__.SerializeResponse(response);\n\n    if(!responseMessage) {\n        this._close();\n        return;\n    }\n\n    if(this._debug)\n        console.debug(responseMessage);\n\n    this._socket.send(responseMessage);\n}\n\nget session() {\n    return this._session;\n}\n\nconnect(url, streamerName)\n{\n    this._close();\n\n    if(streamerName)\n        console.info(`Connecting to ${url} [${streamerName}]...`);\n    else\n        console.info(`Connecting to ${url}...`);\n\n    this._url = url;\n    this._streamerName = streamerName;\n\n    const socket = new WebSocket(url, \"webrtsp\");\n\n    socket.onopen = () => this._onSocketOpen();\n    socket.onclose = (event) => this._onSocketClose(socket, event);\n    socket.onerror = (error) => this._onSocketError(socket, error);\n    socket.onmessage = (event) => this._onSocketMessage(event);\n\n    this._socket = socket\n}\n\nget streamerName() {\n    if(this._session)\n        return this._session.streamerName;\n    else\n        return this._streamerName;\n}\n\nset streamerName(name) {\n    this._streamerName = name;\n    if(this._session)\n        this._session.streamerName = name;\n}\n\nreconnect()\n{\n    if(!this._url || !this._streamerName)\n        return;\n\n    this.connect(this._url, this._streamerName);\n}\n\n}\n\n\n//# sourceURL=webpack://WebRTSP/./WebRTSP/WebRTSP.mjs?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./WebRTSP/WebRTSP.mjs");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});